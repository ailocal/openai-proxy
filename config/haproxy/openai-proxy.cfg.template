global
    log stdout local0 ${LOG_LEVEL}
    maxconn 4096
    daemon
    stats socket ${SOCKET} mode 600 level admin

defaults
    log     global
    mode    http
    ${HAPROXY_LOG_CONFIG}
    option  http-server-close
    option  http-pretend-keepalive
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 503 ${ERROR_PAGE}

frontend ailocal_proxy
    bind ${BIND_IP}:${PORT}
    mode http

    # Set required proxy headers
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-For %[src]

    # Add root path handling
    acl is_root path /
    use_backend backend_local if is_root

    # Catch all v1 paths and send to OpenAI
    acl path_v1 path_beg /v1

    # Audio transcription
    acl path_audio_transcriptions path_beg /v1/audio/transcriptions
    use_backend backend_audio_transcriptions if path_audio_transcriptions

    # Chat completions
    acl path_chat_completions path_beg /v1/chat/completions
    use_backend backend_chat_completions if path_chat_completions

    # Text to Speech
    acl path_audio_speech path_beg /v1/audio/speech
    use_backend backend_audio_speech if path_audio_speech

    # Other v1 paths go to default backend
    use_backend backend_openai if path_v1

    # Default to local backend for non-v1 paths
    default_backend backend_local

backend backend_local
    mode http
    errorfile 503 ${WELCOME_PAGE}

backend backend_audio_transcriptions
    mode http
    option forwardfor
    http-request set-header Host ${BACKEND_AUDIO_TRANSCRIPTIONS_HOST}
    server openai ${BACKEND_AUDIO_TRANSCRIPTIONS_HOST}:${BACKEND_AUDIO_TRANSCRIPTIONS_PORT} ${BACKEND_AUDIO_TRANSCRIPTIONS_SSL_CONFIG}

backend backend_chat_completions
    mode http
    option forwardfor
    http-request set-header Host ${BACKEND_CHAT_COMPLETIONS_HOST}
    server openai ${BACKEND_CHAT_COMPLETIONS_HOST}:${BACKEND_CHAT_COMPLETIONS_PORT} ${BACKEND_CHAT_COMPLETIONS_SSL_CONFIG}

backend backend_audio_speech
    mode http
    option forwardfor
    http-request set-header Host ${BACKEND_AUDIO_SPEECH_HOST}
    server openai ${BACKEND_AUDIO_SPEECH_HOST}:${BACKEND_AUDIO_SPEECH_PORT} ${BACKEND_AUDIO_SPEECH_SSL_CONFIG}

backend backend_openai
    mode http
    option forwardfor
    http-request set-header Host ${BACKEND_OPENAI_HOST}
    server openai ${BACKEND_OPENAI_HOST}:${BACKEND_OPENAI_PORT} ${BACKEND_OPENAI_SSL_CONFIG}

